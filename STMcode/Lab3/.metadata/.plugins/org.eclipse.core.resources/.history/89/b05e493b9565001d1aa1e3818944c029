/*
 * input_processing.c
 *
 *  Created on: Nov 16, 2022
 *      Author: DELL
 */

#include "main.h"
#include "input_reading.h"
#include "seven_seg.h"

void changeRGY(int R, int G, int Y) {
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, R);
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, Y);
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, G);
}

void toggleRGY() {
	HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_1);
	HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_2);
	HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_3);
}

enum ButtonState{BUTTON_RELEASED, BUTTON_PRESSED, BUTTON_PRESSED_MORE_THAN_1_SECOND};
enum ButtonState buttonState = BUTTON_RELEASED;

void fsm_for_input_processing(void) {
	switch (buttonState) {
	case BUTTON_RELEASED:
		display7SEG(1);
		if (is_button_pressed(0)) {
			buttonState = BUTTON_PRESSED;
		}
		changeRGY(0, 1, 0);
		break;
	case BUTTON_PRESSED:
		display7SEG(2);
		if (!(is_button_pressed(0))) {
			buttonState = BUTTON_RELEASED;
		} else {
			if (is_button_pressed_1s(0)) {
				buttonState = BUTTON_PRESSED_MORE_THAN_1_SECOND;
			}
		}
		break;
	case BUTTON_PRESSED_MORE_THAN_1_SECOND:
		display7SEG(3);
		if (!(is_button_pressed(0))) {
			buttonState = BUTTON_RELEASED;
		}
		break;
	default:
		break;
	}
}
